TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE    1

       1                    ;-------------------------------------------------------------------------------
       2                    ; HL_sys_core.asm
       3                    ;
       4                    ; Copyright (C) 2009-2015 Texas Instruments Incorporated - www.ti.com  
       5                    ; 
       6                    ; 
       7                    ;  Redistribution and use in source and binary forms, with or without 
       8                    ;  modification, are permitted provided that the following conditions 
       9                    ;  are met:
      10                    ;
      11                    ;    Redistributions of source code must retain the above copyright 
      12                    ;    notice, this list of conditions and the following disclaimer.
      13                    ;
      14                    ;    Redistributions in binary form must reproduce the above copyright
      15                    ;    notice, this list of conditions and the following disclaimer in the 
      16                    ;    documentation and/or other materials provided with the   
      17                    ;    distribution.
      18                    ;
      19                    ;    Neither the name of Texas Instruments Incorporated nor the names of
      20                    ;    its contributors may be used to endorse or promote products derived
      21                    ;    from this software without specific prior written permission.
      22                    ;
      23                    ;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
      24                    ;  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
      25                    ;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
      26                    ;  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
      27                    ;  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
      28                    ;  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
      29                    ;  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
      30                    ;  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
      31                    ;  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
      32                    ;  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
      33                    ;  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
      34                    ;
      35                    ;
      36                    ;
      37                    
      38 00000000               .text
      39 00000000               .arm
      40                    
      41                    ;-------------------------------------------------------------------------------
      42                    ; Initialize CPU Registers
      43                    
      44                        .def     _coreInitRegisters_
      45                        .asmfunc
      46                        
      47                    
      48 00000000           _coreInitRegisters_
      49                    
      50                        ; After reset, the CPU is in the Supervisor mode (M = 10011)
      51 00000000 E1A0000E          mov r0, lr
      52 00000004 E3A01000          mov r1, #0x0000
      53 00000008 E3A02000          mov r2, #0x0000
      54 0000000c E3A03000          mov r3, #0x0000
      55 00000010 E3A04000          mov r4, #0x0000
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE    2

      56 00000014 E3A05000          mov r5, #0x0000
      57 00000018 E3A06000          mov r6, #0x0000
      58 0000001c E3A07000          mov r7, #0x0000
      59 00000020 E3A08000          mov r8, #0x0000
      60 00000024 E3A09000          mov r9, #0x0000
      61 00000028 E3A0A000          mov r10, #0x0000
      62 0000002c E3A0B000          mov r11, #0x0000
      63 00000030 E3A0C000          mov r12, #0x0000
      64 00000034 E3A0D000          mov r13, #0x0000
      65 00000038 E10F1000          mrs r1, cpsr
      66 0000003c E16FF001          msr spsr_cxsf, r1 
      67                            ; Switch to FIQ mode (M = 10001)
      68 00000040 F1020011          cps #17
      69 00000044 E1A0E000          mov lr, r0
      70 00000048 E3A08000          mov r8, #0x0000
      71 0000004c E3A09000          mov r9, #0x0000
      72 00000050 E3A0A000          mov r10, #0x0000
      73 00000054 E3A0B000          mov r11, #0x0000
      74 00000058 E3A0C000          mov r12, #0x0000
      75 0000005c E10F1000          mrs r1, cpsr
      76 00000060 E16FF001          msr spsr_cxsf, r1 
      77                            ; Switch to IRQ mode (M = 10010)
      78 00000064 F1020012          cps #18
      79 00000068 E1A0E000          mov lr, r0
      80 0000006c E10F1000          mrs r1,cpsr
      81 00000070 E16FF001          msr spsr_cxsf, r1         
      82                            ; Switch to Abort mode (M = 10111)
      83 00000074 F1020017          cps #23
      84 00000078 E1A0E000          mov lr, r0
      85 0000007c E10F1000          mrs r1,cpsr
      86 00000080 E16FF001          msr spsr_cxsf, r1         
      87                            ; Switch to Undefined Instruction Mode (M = 11011)
      88 00000084 F102001B          cps #27
      89 00000088 E1A0E000          mov lr, r0
      90 0000008c E10F1000          mrs r1,cpsr
      91 00000090 E16FF001          msr spsr_cxsf, r1         
      92                            ; Switch to System Mode ( Shares User Mode registers ) (M = 11111)
      93 00000094 F102001F          cps #31
      94 00000098 E1A0E000          mov lr, r0
      95 0000009c E10F1000          mrs r1,cpsr
      96 000000a0 E16FF001          msr spsr_cxsf, r1         
      97                    
      98                    
      99 000000a4 EE112F50          mrc   p15,     #0x00,      r2,       c1, c0, #0x02
     100 000000a8 E382260F          orr   r2,      r2,         #0xF00000
     101 000000ac EE012F50          mcr   p15,     #0x00,      r2,       c1, c0, #0x02
     102 000000b0 E3A02101          mov   r2,      #0x40000000
     103 000000b4 EEE82A10          fmxr  fpexc,   r2
     104                    
     105 000000b8 EC411B10          fmdrr d0,         r1,     r1
     106 000000bc EC411B11          fmdrr d1,         r1,     r1
     107 000000c0 EC411B12          fmdrr d2,         r1,     r1
     108 000000c4 EC411B13          fmdrr d3,         r1,     r1
     109 000000c8 EC411B14          fmdrr d4,         r1,     r1
     110 000000cc EC411B15          fmdrr d5,         r1,     r1
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE    3

     111 000000d0 EC411B16          fmdrr d6,         r1,     r1
     112 000000d4 EC411B17          fmdrr d7,         r1,     r1
     113 000000d8 EC411B18          fmdrr d8,         r1,     r1
     114 000000dc EC411B19          fmdrr d9,         r1,     r1
     115 000000e0 EC411B1A          fmdrr d10,        r1,     r1
     116 000000e4 EC411B1B          fmdrr d11,        r1,     r1
     117 000000e8 EC411B1C          fmdrr d12,        r1,     r1
     118 000000ec EC411B1D          fmdrr d13,        r1,     r1
     119 000000f0 EC411B1E          fmdrr d14,        r1,     r1
     120 000000f4 EC411B1F          fmdrr d15,        r1,     r1
     121 000000f8 EBFFFFFE!         bl    next1
     122 000000fc           next1
     123 000000fc EBFFFFFE!         bl    next2
     124 00000100           next2
     125 00000100 EBFFFFFE!         bl    next3
     126 00000104           next3
     127 00000104 EBFFFFFE!         bl    next4
     128 00000108           next4
     129 00000108 E12FFF10          bx    r0
     130                    
     131                        .endasmfunc
     132                    
     133                    
     134                    ;-------------------------------------------------------------------------------
     135                    ; Initialize Stack Pointers
     136                    
     137                        .def     _coreInitStackPointer_
     138                        .asmfunc
     139                    
     140 0000010c           _coreInitStackPointer_
     141                    
     142 0000010c F1020011          cps   #17
     143 00000110 E59FD030          ldr   sp,       fiqSp
     144 00000114 F1020012          cps   #18
     145 00000118 E59FD02C          ldr   sp,       irqSp
     146 0000011c F1020013          cps   #19
     147 00000120 E59FD01C          ldr   sp,       svcSp
     148 00000124 F1020017          cps   #23
     149 00000128 E59FD020          ldr   sp,       abortSp
     150 0000012c F102001B          cps   #27
     151 00000130 E59FD01C          ldr   sp,       undefSp
     152 00000134 F102001F          cps   #31
     153 00000138 E59FD000          ldr   sp,       userSp
     154 0000013c E12FFF1E          bx    lr
     155                    
     156 00000140 08001000  userSp  .word 0x08000000+0x00001000
     157 00000144 08001100  svcSp   .word 0x08000000+0x00001000+0x00000100
     158 00000148 08001200  fiqSp   .word 0x08000000+0x00001000+0x00000100+0x00000100
     159 0000014c 08001300  irqSp   .word 0x08000000+0x00001000+0x00000100+0x00000100+0x00000100
     160 00000150 08001400  abortSp .word 0x08000000+0x00001000+0x00000100+0x00000100+0x00000100+0x00000100
     161 00000154 08001500  undefSp .word 0x08000000+0x00001000+0x00000100+0x00000100+0x00000100+0x00000100+0x00000100
     162                    
     163                        .endasmfunc
     164                    
     165                    ;-------------------------------------------------------------------------------
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE    4

     166                    ; Get CPSR Value
     167                    
     168                        .def     _getCPSRValue_
     169                        .asmfunc
     170                    
     171 00000158           _getCPSRValue_
     172                    
     173 00000158 E10F0000          mrs   r0, CPSR
     174 0000015c E12FFF1E          bx    lr
     175                    
     176                        .endasmfunc
     177                        
     178                    ;-------------------------------------------------------------------------------
     179                    ; Take CPU to IDLE state
     180                    
     181                        .def     _gotoCPUIdle_
     182                        .asmfunc
     183                    
     184 00000160           _gotoCPUIdle_
     185                    
     186 00000160 E320F003          WFI
     187 00000164 E1A00000          nop
     188 00000168 E1A00000          nop
     189 0000016c E1A00000          nop
     190 00000170 E1A00000          nop
     191 00000174 E12FFF1E          bx    lr
     192                            
     193                        .endasmfunc
     194                        
     195                    
     196                    ;-------------------------------------------------------------------------------
     197                    ; Enable VFP Unit
     198                    
     199                        .def     _coreEnableVfp_
     200                        .asmfunc
     201                    
     202 00000178           _coreEnableVfp_
     203                    
     204 00000178 EE110F50          mrc   p15,     #0x00,      r0,       c1, c0, #0x02
     205 0000017c E380060F          orr   r0,      r0,         #0xF00000
     206 00000180 EE010F50          mcr   p15,     #0x00,      r0,       c1, c0, #0x02
     207 00000184 E3A00101          mov   r0,      #0x40000000
     208 00000188 EEE80A10          fmxr  fpexc,   r0
     209 0000018c E12FFF1E          bx    lr
     210                    
     211                        .endasmfunc
     212                    
     213                    ;-------------------------------------------------------------------------------
     214                    ; Enable Event Bus Export
     215                    
     216                        .def     _coreEnableEventBusExport_
     217                        .asmfunc
     218                    
     219 00000190           _coreEnableEventBusExport_
     220                    
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE    5

     221 00000190 E92D0001          stmfd sp!, {r0}
     222 00000194 EE190F1C          mrc   p15, #0x00, r0,         c9, c12, #0x00
     223 00000198 E3800010          orr   r0,  r0,    #0x10
     224 0000019c EE090F1C          mcr   p15, #0x00, r0,         c9, c12, #0x00
     225 000001a0 E8BD0001          ldmfd sp!, {r0}
     226 000001a4 E12FFF1E          bx    lr
     227                    
     228                        .endasmfunc
     229                    
     230                    
     231                    ;-------------------------------------------------------------------------------
     232                    ; Disable Event Bus Export
     233                    
     234                        .def     _coreDisableEventBusExport_
     235                        .asmfunc
     236                    
     237 000001a8           _coreDisableEventBusExport_
     238                    
     239 000001a8 E92D0001          stmfd sp!, {r0}
     240 000001ac EE190F1C          mrc   p15, #0x00, r0,         c9, c12, #0x00
     241 000001b0 E3C00010          bic   r0,  r0,    #0x10
     242 000001b4 EE090F1C          mcr   p15, #0x00, r0,         c9, c12, #0x00
     243 000001b8 E8BD0001          ldmfd sp!, {r0}        
     244 000001bc E12FFF1E          bx    lr
     245                    
     246                        .endasmfunc
     247                    
     248                    ;-------------------------------------------------------------------------------
     249                    ; Enable Offset via Vic controller
     250                    
     251                        .def     _coreEnableIrqVicOffset_
     252                        .asmfunc
     253                    
     254 000001c0           _coreEnableIrqVicOffset_
     255                    
     256 000001c0 E92D0001          stmfd sp!, {r0}
     257 000001c4 EE110F10          mrc   p15, #0, r0,         c1, c0,  #0
     258 000001c8 E3800401          orr   r0,  r0,    #0x01000000
     259 000001cc EE010F10          mcr   p15, #0, r0,         c1, c0,  #0
     260 000001d0 E8BD0001          ldmfd sp!, {r0}        
     261 000001d4 E12FFF1E          bx    lr
     262                    
     263                        .endasmfunc
     264                    
     265                    
     266                    ;-------------------------------------------------------------------------------
     267                    ; Get data fault status register
     268                    
     269                        .def     _coreGetDataFault_
     270                        .asmfunc
     271                    
     272 000001d8           _coreGetDataFault_
     273                    
     274 000001d8 EE150F10          mrc   p15, #0, r0, c5, c0,  #0
     275 000001dc E12FFF1E          bx    lr
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE    6

     276                    
     277                        .endasmfunc
     278                    
     279                    
     280                    ;-------------------------------------------------------------------------------
     281                    ; Clear data fault status register
     282                    
     283                        .def     _coreClearDataFault_
     284                        .asmfunc
     285                    
     286 000001e0           _coreClearDataFault_
     287                    
     288 000001e0 E92D0001          stmfd sp!, {r0}
     289 000001e4 E3A00000          mov   r0,  #0
     290 000001e8 EE050F10          mcr   p15, #0, r0, c5, c0,  #0
     291 000001ec E8BD0001          ldmfd sp!, {r0}        
     292 000001f0 E12FFF1E          bx    lr
     293                    
     294                        .endasmfunc
     295                    
     296                    
     297                    ;-------------------------------------------------------------------------------
     298                    ; Get instruction fault status register
     299                    
     300                        .def     _coreGetInstructionFault_
     301                        .asmfunc
     302                    
     303 000001f4           _coreGetInstructionFault_
     304                    
     305 000001f4 EE150F30          mrc   p15, #0, r0, c5, c0, #1
     306 000001f8 E12FFF1E          bx    lr
     307                    
     308                        .endasmfunc
     309                    
     310                    
     311                    ;-------------------------------------------------------------------------------
     312                    ; Clear instruction fault status register
     313                    
     314                        .def     _coreClearInstructionFault_
     315                        .asmfunc
     316                    
     317 000001fc           _coreClearInstructionFault_
     318                    
     319 000001fc E92D0001          stmfd sp!, {r0}
     320 00000200 E3A00000          mov   r0,  #0
     321 00000204 EE050F30          mcr   p15, #0, r0, c5, c0, #1
     322 00000208 E8BD0001          ldmfd sp!, {r0}        
     323 0000020c E12FFF1E          bx    lr
     324                    
     325                        .endasmfunc
     326                    
     327                    
     328                    ;-------------------------------------------------------------------------------
     329                    ; Get data fault address register
     330                    
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE    7

     331                        .def     _coreGetDataFaultAddress_
     332                        .asmfunc
     333                    
     334 00000210           _coreGetDataFaultAddress_
     335                    
     336 00000210 EE160F10          mrc   p15, #0, r0, c6, c0,  #0
     337 00000214 E12FFF1E          bx    lr
     338                    
     339                        .endasmfunc
     340                    
     341                    
     342                    ;-------------------------------------------------------------------------------
     343                    ; Clear data fault address register
     344                    
     345                        .def     _coreClearDataFaultAddress_
     346                        .asmfunc
     347                    
     348 00000218           _coreClearDataFaultAddress_
     349                    
     350 00000218 E92D0001          stmfd sp!, {r0}
     351 0000021c E3A00000          mov   r0,  #0
     352 00000220 EE060F10          mcr   p15, #0, r0, c6, c0,  #0
     353 00000224 E8BD0001          ldmfd sp!, {r0}        
     354 00000228 E12FFF1E          bx    lr
     355                    
     356                        .endasmfunc
     357                    
     358                    
     359                    ;-------------------------------------------------------------------------------
     360                    ; Get instruction fault address register
     361                    
     362                        .def     _coreGetInstructionFaultAddress_
     363                        .asmfunc
     364                    
     365 0000022c           _coreGetInstructionFaultAddress_
     366                    
     367 0000022c EE160F50          mrc   p15, #0, r0, c6, c0, #2
     368 00000230 E12FFF1E          bx    lr
     369                    
     370                        .endasmfunc
     371                    
     372                    
     373                    ;-------------------------------------------------------------------------------
     374                    ; Clear instruction fault address register
     375                    
     376                        .def     _coreClearInstructionFaultAddress_
     377                        .asmfunc
     378                    
     379 00000234           _coreClearInstructionFaultAddress_
     380                    
     381 00000234 E92D0001          stmfd sp!, {r0}
     382 00000238 E3A00000          mov   r0,  #0
     383 0000023c EE060F50          mcr   p15, #0, r0, c6, c0, #2
     384 00000240 E8BD0001          ldmfd sp!, {r0}        
     385 00000244 E12FFF1E          bx    lr
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE    8

     386                    
     387                        .endasmfunc
     388                    
     389                    
     390                    ;-------------------------------------------------------------------------------
     391                    ; Get auxiliary data fault status register
     392                    
     393                        .def     _coreGetAuxiliaryDataFault_
     394                        .asmfunc
     395                    
     396 00000248           _coreGetAuxiliaryDataFault_
     397                    
     398 00000248 EE150F11          mrc   p15, #0, r0, c5, c1, #0
     399 0000024c E12FFF1E          bx    lr
     400                    
     401                        .endasmfunc
     402                    
     403                    
     404                    ;-------------------------------------------------------------------------------
     405                    ; Clear auxiliary data fault status register
     406                    
     407                        .def     _coreClearAuxiliaryDataFault_
     408                        .asmfunc
     409                    
     410 00000250           _coreClearAuxiliaryDataFault_
     411                    
     412 00000250 E92D0001          stmfd sp!, {r0}
     413 00000254 E3A00000          mov   r0,  #0
     414 00000258 EE050F11          mcr   p15, #0, r0, c5, c1, #0
     415 0000025c E8BD0001          ldmfd sp!, {r0}        
     416 00000260 E12FFF1E          bx    lr
     417                    
     418                        .endasmfunc
     419                    
     420                    
     421                    ;-------------------------------------------------------------------------------
     422                    ; Get auxiliary instruction fault status register
     423                    
     424                        .def     _coreGetAuxiliaryInstructionFault_
     425                        .asmfunc
     426                    
     427 00000264           _coreGetAuxiliaryInstructionFault_
     428                    
     429 00000264 EE150F31          mrc   p15, #0, r0, c5, c1, #1
     430 00000268 E12FFF1E          bx    lr
     431                    
     432                        .endasmfunc
     433                    
     434                    ;-------------------------------------------------------------------------------
     435                    ; Clear auxiliary instruction fault status register
     436                    
     437                        .def     _coreClearAuxiliaryInstructionFault_
     438                        .asmfunc
     439                    
     440 0000026c           _coreClearAuxiliaryInstructionFault_
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE    9

     441                    
     442 0000026c E92D0001          stmfd sp!, {r0}
     443 00000270 E3A00000          mov   r0,  #0
     444 00000274 EE150F31          mrc   p15, #0, r0, c5, c1, #1
     445 00000278 E8BD0001          ldmfd sp!, {r0}        
     446 0000027c E12FFF1E          bx    lr
     447                    
     448                        .endasmfunc
     449                    
     450                    ;-------------------------------------------------------------------------------
     451                    ; Disable IRQ interrupt
     452                    
     453                            .def _disable_IRQ_interrupt_    
     454                            .asmfunc
     455                            
     456 00000280           _disable_IRQ_interrupt_
     457                    
     458 00000280 F10C0080          cpsid i
     459 00000284 E12FFF1E          bx    lr
     460                            
     461                            .endasmfunc
     462                            
     463                    ;-------------------------------------------------------------------------------
     464                    ; Enable interrupts - CPU IRQ
     465                    
     466                           .def _enable_IRQ_interrupt_
     467                           .asmfunc
     468                    
     469 00000288           _enable_IRQ_interrupt_
     470                    
     471 00000288 F1080080          cpsie i
     472 0000028c E12FFF1E          bx    lr
     473                            
     474                            .endasmfunc
     475                    ;-------------------------------------------------------------------------------
     476                    ; Enable interrupts - CPU IRQ & FIQ
     477                    
     478                           .def _enable_interrupt_
     479                           .asmfunc
     480                    
     481 00000290           _enable_interrupt_
     482                    
     483 00000290 F10800C0          cpsie if
     484 00000294 E12FFF1E          bx    lr
     485                            
     486                            .endasmfunc
     487                            
     488                    ;-------------------------------------------------------------------------------
     489                    ; Clear ESM CCM errorss
     490                    
     491                           .def _esmCcmErrorsClear_
     492                           .asmfunc
     493                    
     494 00000298           _esmCcmErrorsClear_
     495                    
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE   10

     496 00000298 E92D0007          stmfd sp!, {r0-r2}        
     497 0000029c E59F0048          ldr   r0, ESMSR1_REG    ; load the ESMSR1 status register address
     498 000002a0 E59F2064          ldr   r2, ESMSR1_ERR_CLR
     499 000002a4 E5802000          str   r2, [r0]         ; clear the ESMSR1 register
     500                    
     501 000002a8 E59F0040          ldr   r0, ESMSR2_REG    ; load the ESMSR2 status register address
     502 000002ac E59F205C          ldr   r2, ESMSR2_ERR_CLR
     503 000002b0 E5802000          str   r2, [r0]         ; clear the ESMSR2 register
     504                    
     505 000002b4 E59F0040          ldr   r0, ESMSSR2_REG    ; load the ESMSSR2 status register address
     506 000002b8 E59F2054          ldr   r2, ESMSSR2_ERR_CLR
     507 000002bc E5802000          str   r2, [r0]             ; clear the ESMSSR2 register
     508                    
     509 000002c0 E59F0030          ldr   r0, ESMKEY_REG    ; load the ESMKEY register address
     510 000002c4 E3A02005          mov   r2, #0x5             ; load R2 with 0x5
     511 000002c8 E5802000          str   r2, [r0]             ; clear the ESMKEY register
     512                    
     513 000002cc E59F0048          ldr   r0, VIM_INTREQ    ; load the INTREQ register address
     514 000002d0 E59F2040          ldr   r2, VIM_INT_CLR
     515 000002d4 E5802000          str   r2, [r0]         ; clear the INTREQ register
     516 000002d8 E59F0020          ldr   r0, CCMR4_STAT_REG    ; load the CCMR4 status register address
     517 000002dc E59F2024          ldr   r2, CCMR4_ERR_CLR
     518 000002e0 E5802000          str   r2, [r0]         ; clear the CCMR4 status register
     519 000002e4 E8BD0007          ldmfd sp!, {r0-r2}        
     520 000002e8 E12FFF1E          bx    lr
     521                    
     522 000002ec FFFFF518  ESMSR1_REG        .word 0xFFFFF518
     523 000002f0 FFFFF51C  ESMSR2_REG        .word 0xFFFFF51C
     524 000002f4 FFFFF520  ESMSR3_REG        .word 0xFFFFF520
     525 000002f8 FFFFF538  ESMKEY_REG        .word 0xFFFFF538
     526 000002fc FFFFF53C  ESMSSR2_REG       .word 0xFFFFF53C
     527 00000300 FFFFF600  CCMR4_STAT_REG    .word 0xFFFFF600
     528 00000304 FFFFFFFF  ERR_CLR_WRD       .word 0xFFFFFFFF
     529 00000308 00010000  CCMR4_ERR_CLR     .word 0x00010000
     530 0000030c 80000000  ESMSR1_ERR_CLR    .word 0x80000000
     531 00000310 00000004  ESMSR2_ERR_CLR    .word 0x00000004
     532 00000314 00000004  ESMSSR2_ERR_CLR   .word 0x00000004
     533 00000318 00000001  VIM_INT_CLR       .word 0x00000001
     534 0000031c FFFFFE20  VIM_INTREQ        .word 0xFFFFFE20
     535                    
     536                            .endasmfunc    
     537                    
     538                    ;-------------------------------------------------------------------------------
     539                    ;Initialize RAM memory
     540                    
     541                           .def _memInit_
     542                           .asmfunc
     543                               
     544 00000320           _memInit_
     545 00000320 E59FC040                  ldr   r12, MINITGCR             ;Load MINITGCR register address
     546 00000324 E3A0400A                  mov   r4, #0xA                  
     547 00000328 E58C4000                  str   r4, [r12]                 ;Enable global memory hardware initialization
     548                                    
     549 0000032c E59FB038                  ldr   r11,  MSIENA              ;Load MSIENA register address
     550 00000330 E3A04001                  mov   r4, #0x1                  ;Bit position 0 of MSIENA corresponds to SRAM
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE   11

     551 00000334 E58B4000                  str   r4, [r11]                 ;Enable auto hardware initalisation for SRAM
     552 00000338           mloop                                                   ;Loop till memory hardware initialization coml
     553 00000338 E59F5030                  ldr   r5, MSTCGSTAT
     554 0000033c E5954000                  ldr   r4, [r5]
     555 00000340 E3140C01                  tst   r4, #0x100
     556 00000344 0AFFFFFE!                 beq   mloop
     557                                    
     558 00000348 E3A04005                  mov   r4, #5
     559 0000034c E58C4000                  str   r4, [r12]                 ;Disable global memory hardware initialization
     560 00000350 E12FFF1E                  bx lr
     561                                    .endasmfunc
     562                                    
     563                    ;-------------------------------------------------------------------------------
     564                    ; Check Initialize RAM memory
     565                    
     566                           .def _checkMemInitOn_
     567                           .asmfunc
     568                    
     569 00000354           _checkMemInitOn_
     570 00000354 E59FC00C                  ldr   r12, MINITGCR             ;Load MINITGCR register address
     571 00000358 E59C4000  mloop5  ldr   r4, [r12]
     572 0000035c E334000A                  teq   r4, #0xA
     573 00000360 0AFFFFFE!                 beq   mloop5
     574 00000364 E12FFF1E                  bx lr
     575                                    .endasmfunc
     576                                    
     577 00000368 FFFFFF5C  MINITGCR        .word 0xFFFFFF5C
     578 0000036c FFFFFF60  MSIENA          .word 0xFFFFFF60
     579 00000370 FFFFFF68  MSTCGSTAT       .word 0xFFFFFF68
     580                    
     581                    ;-------------------------------------------------------------------------------
     582                    ; Enable caches
     583                    
     584                                    .def  _cacheEnable_
     585                            .asmfunc
     586                    
     587 00000374           _cacheEnable_
     588                    
     589 00000374 E92D0003          stmfd sp!, {r0-r1} 
     590 00000378 E3A00000          mov r0,#0
     591                                    
     592 0000037c EE111F10                  MRC   p15, #0, R1, c1, c0, #0   ; Read System Control Register configuration data
     593 00000380 E3811A01                  ORR   R1, R1, #0x1 <<12                 ; instruction cache enable
     594 00000384 E3811004                  ORR   R1, R1, #0x1 <<2              ; data cache enable
     595 00000388 F57FF04F                  DSB
     596 0000038c EE0F0F15                  MCR   p15, #0, r0, c15, c5, #0  ; Invalidate entire data cache
     597 00000390 EE070F15                  MCR   p15, #0, r0, c7, c5, #0   ; Invalidate entire instruction cache
     598 00000394 EE011F10                  MCR   p15, #0, R1, c1, c0, #0   ; enabled cache RAMs
     599 00000398 F57FF06F                  ISB
     600                                    
     601 0000039c E8BD0003                  ldmfd sp!, {r0-r1}   
     602                                     
     603 000003a0 E12FFF1E                  bx        lr
     604                            .endasmfunc
     605                    
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE   12

     606                    ;-------------------------------------------------------------------------------
     607                    ; Disable caches
     608                    
     609                                    .def  _cacheDisable_
     610                            .asmfunc
     611                    
     612 000003a4           _cacheDisable_
     613                    
     614 000003a4 E92D0002                  stmfd sp!, {r1} 
     615                    
     616 000003a8 EE111F10                  MRC   p15, #0, R1, c1, c0, #0   ; Read System Control Register configuration data
     617 000003ac E3C11A01                  BIC   R1, R1, #0x1 <<12                 ; instruction cache disable
     618 000003b0 E3C11004                  BIC   R1, R1, #0x1 <<2              ; data cache disable
     619 000003b4 F57FF04F                  DSB
     620 000003b8 EE011F10                  MCR   p15, #0, R1, c1, c0, #0   ; disabled cache RAMs
     621 000003bc F57FF06F                  ISB
     622                                    
     623 000003c0 E8BD0002                  ldmfd sp!, {r1}   
     624                                    
     625 000003c4 E12FFF1E                  bx        lr
     626                            .endasmfunc
     627                    
     628                    ;-------------------------------------------------------------------------------
     629                    ; Invalidate Data Cache
     630                    
     631                                    .def  _dCacheInvalidate_
     632                                .asmfunc
     633                    
     634 000003c8           _dCacheInvalidate_
     635 000003c8 E92D0001          stmfd sp!, {r0} 
     636 000003cc E3A00000                  MOV   R0,#0
     637 000003d0 F57FF04F                  DSB
     638 000003d4 EE0F0F15                  MCR   P15, #0, R0, C15, C5, #0
     639 000003d8 F57FF04F                  DSB
     640 000003dc E8BD0001                  ldmfd sp!, {r0}   
     641 000003e0 E12FFF1E                  bx        lr
     642                            .endasmfunc
     643                    
     644                    ;-------------------------------------------------------------------------------
     645                    ; Invalidate Instruction Cache
     646                    
     647                                    .def  _iCacheInvalidate_
     648                            .asmfunc
     649                    
     650 000003e4           _iCacheInvalidate_
     651 000003e4 E92D0001          stmfd sp!, {r0}
     652 000003e8 E3A00000                  MOV   R0,#0
     653 000003ec F57FF04F                  DSB
     654 000003f0 EE070F15                  MCR   p15, #0, r0, c7, c5, #0
     655 000003f4 F57FF04F                  DSB
     656 000003f8 E8BD0001                  ldmfd sp!, {r0}  
     657 000003fc E12FFF1E                  bx        lr
     658                            .endasmfunc
     659                    
     660                    
TI ARM Assembler PC v16.9.0 Thu Feb 16 13:27:10 2017

Tools Copyright (c) 1996-2015 Texas Instruments Incorporated
../hcg/source/HL_sys_core.asm                                        PAGE   13

     661                    
     662                    ;-------------------------------------------------------------------------------
     663                    ; C++ construct table pointers
     664                    
     665                        .def    __TI_PINIT_Base, __TI_PINIT_Limit
     666                        .weak   SHT$$INIT_ARRAY$$Base, SHT$$INIT_ARRAY$$Limit
     667                    
     668 00000400 00000000! __TI_PINIT_Base  .long SHT$$INIT_ARRAY$$Base
     669 00000404 00000000! __TI_PINIT_Limit .long SHT$$INIT_ARRAY$$Limit
     670                    
     671                    
     672                        
     673                    ;-------------------------------------------------------------------------------
     674                    

No Assembly Errors, No Assembly Warnings
